# -*- coding: utf-8 -*-
"""Yt_Video_Extractor_Audio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19s8iZIlfQNmUaCs1qwJrD-nQtwnimd9S
"""

!pip install pytube

from google.colab import drive
drive.mount('/content/drive')

##Download YT Video Using Pytube Library

from pytube import YouTube

def download_video(url,path):
    try:
        yt = YouTube(url)
        stream = yt.streams.get_highest_resolution()
        stream.download(output_path=path)
        print(f"Download completed ")

    except Exception as e:
        print(f"An error occurred: {e}")

video_url = "https://youtu.be/Tb3x5I0ulCg"
output_path = '/content/drive'

download_video(video_url, output_path)

#issue with output due to get_highest_resolution function

##Extract Text from audio File

!pip install deepgram-sdk==3.*

import io
import requests

DEEPGRAM_API_KEY = '91364a5e3d67601ebbadbddfe345ba463bbc1821'


def deepgram_audio(url):
    try:
        yt = YouTube(url)
        audio = yt.streams.get_audio_only()

        audio_buffer = io.BytesIO()
        audio.stream_to_buffer(audio_buffer)
        audio.seek(0)

        deepgram_link = "https://api.deepgram.com/v1/listen"

        if audio.mime_type == "audio/webm":
            content_type = "audio/webm"
        elif audio.mime_type == "audio/mp4":
            content_type = "audio/mp4"

        headers = {
            "Authorization": f"Token {DEEPGRAM_API_KEY}",
            "Content-Type": content_type
        }

        response = requests.post(deepgram_link, headers=headers, data=audio_buffer)

        converted_text = response.json()["results"]["channels"][0]["alternatives"][0]["transcript"]
        return converted_text

    except Exception as e:
        print(f"An error occurred: {e}")

video_url = input("Enter youtube video ")

converted_text = deepgram_audio(video_url)

#issue with functioning due to mainly get_audio_only function inbuilt in pytube

!pip install elevenlabs

## Convert text to Audio using Eleven Labs

from elevenlabs import ElevenLabs, VoiceSettings

client = ElevenLabs(
    api_key="sk_3ebe0391c2ca512cb79a2628ec969e3f2d22d8cc1454ff40",
)

audio_lab = client.text_to_speech.convert(
    voice_id="pMsXgVXv3BLzUgSXRplE",
    optimize_streaming_latency="0",
    output_format="mp3_22050_32",
    text=converted_text,
    voice_settings=VoiceSettings(
        stability=0.1,
        similarity_boost=0.3,
        style=0.2,
    ),
)

if audio_lab and hasattr(audio_lab, 'content'):
    with open("output.mp3", "wb") as audio_file:
        audio_file.write(audio_lab.content)
    print("Audio saved as output.mp3")